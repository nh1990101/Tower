{
  "__type__": "cc.EffectAsset",
  "_name": "../shader/MassObj",
  "_objFlags": 0,
  "__editorExtras__": {},
  "_native": "",
  "techniques": [
    {
      "name": "opaque",
      "passes": [
        {
          "program": "../shader/MassObj|vs:vert|fs:frag",
          "properties": {
            "_Color": {
              "value": [
                1,
                1,
                1,
                1
              ],
              "editor": {
                "type": "color"
              },
              "type": 16
            },
            "_MainTex": {
              "value": "white",
              "type": 28
            },
            "_Glossiness": {
              "value": [
                0.5
              ],
              "editor": {
                "range": [
                  0,
                  1
                ],
                "displayName": "Smoothness"
              },
              "type": 13
            },
            "_Metallic": {
              "value": [
                0
              ],
              "editor": {
                "range": [
                  0,
                  1
                ]
              },
              "type": 13
            },
            "_TilingAndOffset": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "type": 16
            },
            "_Gloss": {
              "value": [
                20
              ],
              "editor": {
                "slide": true,
                "range": [
                  8,
                  255
                ],
                "step": 1,
                "type": "float"
              },
              "type": 13
            },
            "_Specular": {
              "value": [
                1,
                1,
                1,
                1
              ],
              "editor": {
                "type": "color"
              },
              "type": 16
            }
          }
        }
      ]
    }
  ],
  "shaders": [
    {
      "blocks": [
        {
          "name": "ConstantV",
          "members": [
            {
              "name": "_TilingAndOffset",
              "type": 16,
              "count": 1
            },
            {
              "name": "_MainPos",
              "type": 16,
              "count": 1
            },
            {
              "name": "_FollowPos",
              "type": 16,
              "count": 1
            },
            {
              "name": "_Glossiness",
              "type": 13,
              "count": 1
            },
            {
              "name": "_Metallic",
              "type": 13,
              "count": 1
            },
            {
              "name": "_MeshH",
              "type": 13,
              "count": 1
            },
            {
              "name": "_W_Bottom",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "stageFlags": 1,
          "binding": 0
        },
        {
          "name": "ConstantF",
          "members": [
            {
              "name": "_Color",
              "type": 16,
              "count": 1
            },
            {
              "name": "_Specular",
              "type": 16,
              "count": 1
            },
            {
              "name": "_Gloss",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "stageFlags": 16,
          "binding": 1
        }
      ],
      "samplerTextures": [
        {
          "name": "_MainTex",
          "type": 28,
          "count": 1,
          "defines": [],
          "stageFlags": 16,
          "binding": 2
        }
      ],
      "samplers": [],
      "textures": [],
      "buffers": [],
      "images": [],
      "subpassInputs": [],
      "attributes": [
        {
          "name": "a_position",
          "defines": [],
          "format": 32,
          "location": 0
        },
        {
          "name": "a_normal",
          "defines": [],
          "format": 32,
          "location": 1
        },
        {
          "name": "a_texCoord",
          "defines": [],
          "format": 21,
          "location": 2
        }
      ],
      "varyings": [
        {
          "name": "v_pos",
          "type": 16,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 0
        },
        {
          "name": "v_worldNormal",
          "type": 15,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 1
        },
        {
          "name": "v_worldPos",
          "type": 15,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 2
        },
        {
          "name": "v_uv",
          "type": 14,
          "count": 1,
          "defines": [],
          "stageFlags": 17,
          "location": 3
        }
      ],
      "fragColors": [
        {
          "name": "cc_FragColor",
          "typename": "vec4",
          "type": 16,
          "count": 1,
          "defines": [],
          "stageFlags": 16,
          "location": 0
        }
      ],
      "descriptors": [
        {
          "rate": 0,
          "blocks": [
            {
              "tags": {
                "builtin": "local"
              },
              "name": "CCLocal",
              "members": [
                {
                  "name": "cc_matWorld",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matWorldIT",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_lightingMapUVParam",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_localShadowBias",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeData1",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeData2",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeBlendData1",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_reflectionProbeBlendData2",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                }
              ],
              "defines": [],
              "stageFlags": 1
            }
          ],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 1,
          "blocks": [
            {
              "name": "ConstantV",
              "members": [
                {
                  "name": "_TilingAndOffset",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "_MainPos",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "_FollowPos",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "_Glossiness",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "_Metallic",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "_MeshH",
                  "type": 13,
                  "count": 1
                },
                {
                  "name": "_W_Bottom",
                  "type": 13,
                  "count": 1
                }
              ],
              "defines": [],
              "stageFlags": 1,
              "binding": 0
            },
            {
              "name": "ConstantF",
              "members": [
                {
                  "name": "_Color",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "_Specular",
                  "type": 16,
                  "count": 1
                },
                {
                  "name": "_Gloss",
                  "type": 13,
                  "count": 1
                }
              ],
              "defines": [],
              "stageFlags": 16,
              "binding": 1
            }
          ],
          "samplerTextures": [
            {
              "name": "_MainTex",
              "type": 28,
              "count": 1,
              "defines": [],
              "stageFlags": 16,
              "binding": 2
            }
          ],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 2,
          "blocks": [],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        },
        {
          "rate": 3,
          "blocks": [
            {
              "tags": {
                "builtin": "global"
              },
              "name": "CCGlobal",
              "members": [
                {
                  "name": "cc_time",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_screenSize",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_nativeSize",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_probeInfo",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_debug_view_mode",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                }
              ],
              "defines": [],
              "stageFlags": 17
            },
            {
              "tags": {
                "builtin": "global"
              },
              "name": "CCCamera",
              "members": [
                {
                  "name": "cc_matView",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matProj",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matProjInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewProj",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_matViewProjInv",
                  "typename": "mat4",
                  "type": 25,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_cameraPos",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "highp "
                },
                {
                  "name": "cc_surfaceTransform",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_screenScale",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_exposure",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_mainLitDir",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_mainLitColor",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_ambientSky",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_ambientGround",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogColor",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogBase",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_fogAdd",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_nearFar",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                },
                {
                  "name": "cc_viewPort",
                  "typename": "vec4",
                  "type": 16,
                  "count": 1,
                  "precision": "mediump "
                }
              ],
              "defines": [],
              "stageFlags": 17
            }
          ],
          "samplerTextures": [],
          "samplers": [],
          "textures": [],
          "buffers": [],
          "images": [],
          "subpassInputs": []
        }
      ],
      "hash": 1472833160,
      "glsl4": {
        "vert": "\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n  highp vec4 cc_localShadowBias;\n  highp vec4 cc_reflectionProbeData1;\n  highp vec4 cc_reflectionProbeData2;\n  highp vec4 cc_reflectionProbeBlendData1;\n  highp vec4 cc_reflectionProbeBlendData2;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 0) out vec4 v_pos;\nlayout(location = 1) out vec3 v_worldNormal;\nlayout(location = 2) out vec3 v_worldPos;\nlayout(location = 3) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform ConstantV {\n  vec4 _TilingAndOffset;\n  vec4 _MainPos;\n  vec4 _FollowPos;\n  float _Glossiness;\n  float _Metallic;\n  float _MeshH;\n  float _W_Bottom;\n};\n#define saturate(a) clamp(a, 0.0, 1.0)\nvec4 vert () {\n  vec4 vertex = vec4(a_position, 1.0);\n  vec3 mainPos =(cc_matWorldIT* _MainPos).xyz;\n  vec3 follow = (cc_matWorldIT* _FollowPos).xyz;\n  vec3 offDir = follow - mainPos;\n  vec3 followVert = a_position + offDir;\n  vec3 wPos = (cc_matWorld*vertex).xyz;\n  float mask = (wPos.y - _W_Bottom) / max(0.00001, _MeshH);\n  vertex = vec4(mix(a_position, followVert, mask),1.0);\n  v_pos = cc_matProj * (cc_matView * cc_matWorld) * vertex;\n  vec3 normal = a_normal;\n  v_worldNormal =  mat3(cc_matWorldIT) * normal;\n  v_worldPos = (cc_matWorld * vertex).xyz;\n  v_uv = a_texCoord * _TilingAndOffset.xy + _TilingAndOffset.zw;\n  return v_pos;\n}\nvoid main() { gl_Position = vert(); }",
        "frag": "\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#define saturate(a) clamp(a, 0.0, 1.0)\nlayout(location = 0) in vec4 v_pos;\nlayout(location = 1) in vec3 v_worldNormal;\nlayout(location = 2) in vec3 v_worldPos;\nlayout(location = 3) in vec2 v_uv;\nlayout(set = 1, binding = 1) uniform ConstantF {\n  vec4 _Color;\n  vec4 _Specular;\n  float _Gloss;\n};\nlayout(set = 1, binding = 2) uniform sampler2D _MainTex;\nvec4 frag () {\n  vec3 worldNormal =  normalize(v_worldNormal);\n  vec3 worldLightDir = normalize(-cc_mainLitDir.xyz);\n  vec3 albedo = texture(_MainTex, v_uv).rgb * _Color.rgb;\n  vec3 ambient = cc_ambientSky.xyz;\n  vec3 diffuse = cc_mainLitColor.rgb * albedo * saturate(dot(worldNormal, worldLightDir));\n  vec3 viewDir = normalize(cc_cameraPos.xyz - v_worldPos);\n  vec3 reflectDir = normalize(reflect(-worldLightDir, worldNormal));\n  vec3 specular = cc_mainLitColor.rgb * _Specular.rgb * pow(saturate(dot(reflectDir, viewDir)), _Gloss);\n  return CCFragOutput(vec4(ambient + diffuse + specular, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n  highp vec4 cc_localShadowBias;\n  highp vec4 cc_reflectionProbeData1;\n  highp vec4 cc_reflectionProbeData2;\n  highp vec4 cc_reflectionProbeBlendData1;\n  highp vec4 cc_reflectionProbeBlendData2;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec4 v_pos;\nout vec3 v_worldNormal;\nout vec3 v_worldPos;\nout vec2 v_uv;\nlayout(std140) uniform ConstantV {\n  vec4 _TilingAndOffset;\n  vec4 _MainPos;\n  vec4 _FollowPos;\n  float _Glossiness;\n  float _Metallic;\n  float _MeshH;\n  float _W_Bottom;\n};\n#define saturate(a) clamp(a, 0.0, 1.0)\nvec4 vert () {\n  vec4 vertex = vec4(a_position, 1.0);\n  vec3 mainPos =(cc_matWorldIT* _MainPos).xyz;\n  vec3 follow = (cc_matWorldIT* _FollowPos).xyz;\n  vec3 offDir = follow - mainPos;\n  vec3 followVert = a_position + offDir;\n  vec3 wPos = (cc_matWorld*vertex).xyz;\n  float mask = (wPos.y - _W_Bottom) / max(0.00001, _MeshH);\n  vertex = vec4(mix(a_position, followVert, mask),1.0);\n  v_pos = cc_matProj * (cc_matView * cc_matWorld) * vertex;\n  vec3 normal = a_normal;\n  v_worldNormal =  mat3(cc_matWorldIT) * normal;\n  v_worldPos = (cc_matWorld * vertex).xyz;\n  v_uv = a_texCoord * _TilingAndOffset.xy + _TilingAndOffset.zw;\n  return v_pos;\n}\nvoid main() { gl_Position = vert(); }",
        "frag": "\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#define saturate(a) clamp(a, 0.0, 1.0)\nin vec4 v_pos;\nin vec3 v_worldNormal;\nin vec3 v_worldPos;\nin vec2 v_uv;\nlayout(std140) uniform ConstantF {\n  vec4 _Color;\n  vec4 _Specular;\n  float _Gloss;\n};\nuniform sampler2D _MainTex;\nvec4 frag () {\n  vec3 worldNormal =  normalize(v_worldNormal);\n  vec3 worldLightDir = normalize(-cc_mainLitDir.xyz);\n  vec3 albedo = texture(_MainTex, v_uv).rgb * _Color.rgb;\n  vec3 ambient = cc_ambientSky.xyz;\n  vec3 diffuse = cc_mainLitColor.rgb * albedo * saturate(dot(worldNormal, worldLightDir));\n  vec3 viewDir = normalize(cc_cameraPos.xyz - v_worldPos);\n  vec3 reflectDir = normalize(reflect(-worldLightDir, worldNormal));\n  vec3 specular = cc_mainLitColor.rgb * _Specular.rgb * pow(saturate(dot(reflectDir, viewDir)), _Gloss);\n  return CCFragOutput(vec4(ambient + diffuse + specular, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec4 v_pos;\nvarying vec3 v_worldNormal;\nvarying vec3 v_worldPos;\nvarying vec2 v_uv;\n   uniform vec4 _TilingAndOffset;\n   uniform vec4 _MainPos;\n   uniform vec4 _FollowPos;\n   uniform float _MeshH;\n   uniform float _W_Bottom;\n#define saturate(a) clamp(a, 0.0, 1.0)\nvec4 vert () {\n  vec4 vertex = vec4(a_position, 1.0);\n  vec3 mainPos =(cc_matWorldIT* _MainPos).xyz;\n  vec3 follow = (cc_matWorldIT* _FollowPos).xyz;\n  vec3 offDir = follow - mainPos;\n  vec3 followVert = a_position + offDir;\n  vec3 wPos = (cc_matWorld*vertex).xyz;\n  float mask = (wPos.y - _W_Bottom) / max(0.00001, _MeshH);\n  vertex = vec4(mix(a_position, followVert, mask),1.0);\n  v_pos = cc_matProj * (cc_matView * cc_matWorld) * vertex;\n  vec3 normal = a_normal;\n  v_worldNormal =  mat3(cc_matWorldIT) * normal;\n  v_worldPos = (cc_matWorld * vertex).xyz;\n  v_uv = a_texCoord * _TilingAndOffset.xy + _TilingAndOffset.zw;\n  return v_pos;\n}\nvoid main() { gl_Position = vert(); }",
        "frag": "\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#define saturate(a) clamp(a, 0.0, 1.0)\nvarying vec4 v_pos;\nvarying vec3 v_worldNormal;\nvarying vec3 v_worldPos;\nvarying vec2 v_uv;\n   uniform vec4 _Color;\n   uniform vec4 _Specular;\n   uniform float _Gloss;\nuniform sampler2D _MainTex;\nvec4 frag () {\n  vec3 worldNormal =  normalize(v_worldNormal);\n  vec3 worldLightDir = normalize(-cc_mainLitDir.xyz);\n  vec3 albedo = texture2D(_MainTex, v_uv).rgb * _Color.rgb;\n  vec3 ambient = cc_ambientSky.xyz;\n  vec3 diffuse = cc_mainLitColor.rgb * albedo * saturate(dot(worldNormal, worldLightDir));\n  vec3 viewDir = normalize(cc_cameraPos.xyz - v_worldPos);\n  vec3 reflectDir = normalize(reflect(-worldLightDir, worldNormal));\n  vec3 specular = cc_mainLitColor.rgb * _Specular.rgb * pow(saturate(dot(reflectDir, viewDir)), _Gloss);\n  return CCFragOutput(vec4(ambient + diffuse + specular, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            },
            {
              "name": "CCCamera",
              "defines": []
            }
          ],
          "samplerTextures": [],
          "buffers": [],
          "images": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplerTextures": [],
          "buffers": [],
          "images": []
        },
        "statistics": {
          "CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS": 63,
          "CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS": 45
        }
      },
      "defines": [],
      "name": "../shader/MassObj|vs:vert|fs:frag"
    }
  ],
  "combinations": [],
  "hideInEditor": false
}